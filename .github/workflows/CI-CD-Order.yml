name: Order Docker Image CI

env:
  DOTNET_VERSION: '6'
on:
  push:
    branches: ['main']
    paths:
      - Services/Order/**

  pull_request:
    branches: ['main']
    paths:
      - Services/Order/**

jobs:
  Testing:
    environment: development
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Services/Order/IW
    strategy:
      matrix:
        dotnet-version: [ '6.0.x' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: List Folder
        run: ls
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build
      
      - name: Unit Testing
        run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
      
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: /**/coverage/**/coverage.cobertura.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '5 80'
        
      - name: Upload File as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: code-coverage-results.md

  Update-Report:
    runs-on: ubuntu-latest
    needs: [Testing]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: my-artifact
          path: ./downloaded-artifact
          
      # Runs a set of commands using the runners shell 
      - name: Update README.md
        run: |
          sed '/# Test Coverage/r ./downloaded-artifact/code-coverage-results.md' README.md
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git add .
          git commit -m "Automated report" -a
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
  Build-image:
    environment: production
    runs-on: ubuntu-latest
    needs: [Testing]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/order-service
      # - name: Set up .NET Core
      #   uses: actions/setup-dotnet@v2
      #   with:
      #       dotnet-version: ${{ env.DOTNET_VERSION }}
      # - name: Restore dependencies
      #   run: dotnet restore
      # # - name: Build
      # #   run: dotnet build --no-restore
      # - name: Test
      #   run: dotnet test --no-build --verbosity normal

      - name: Build and push backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./Services/Order/IW
          file: ./Services/Order/IW/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
